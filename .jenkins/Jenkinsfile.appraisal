#!/usr/bin/groovy

@Library('jenkins-pipeline@v0.4.4')

def setGithubStatus(String name, String description, String status) {
  gitHubStatus([
    repoSlug:    'Invoca/elasticsearch_models',
    sha:         params.GIT_COMMIT,
    description: description,
    context:     name,
    targetURL:   env.RUN_DISPLAY_URL,
    token:       env.GITHUB_TOKEN,
    status:      status
  ])
}

pipeline {
  agent {
    kubernetes {
      defaultContainer 'ruby'
      yamlFile '.jenkins/ruby_build_pod.yml'
    }
  }

  parameters {
    choice(name: "APPRAISAL_NAME", choices: ["rails-4", "rails-5", "rails-6"], description: "Which appraisal group to run the unit tests against.")
    string(name: "GIT_COMMIT", description: "Sha to run the appraisal against.", trim: true)
  }

  environment {
    GITHUB_TOKEN         = credentials('github_token')
    BUNDLE_GEM__FURY__IO = credentials('gemfury_deploy_token')
  }

  stages {
    stage("Setup") {
      steps {
        setGithubStatus(params.APPRAISAL_NAME, 'Running unit tests', 'pending')
        sh "git checkout ${params.GIT_COMMIT}"
        sh 'bundle install'
        sh 'bundle exec appraisal install'
      }
    }

    stage("Unit Tests") {
      environment { ELASTICSEARCH_TEST_PORT = '9200' }
      steps       { sh 'bundle exec rspec' }
      post        { always { junit 'spec/reports/*.xml' } }
    }
  }

  post {
    success { setGithubStatus(params.APPRAISAL_NAME, 'Passed all unit tests!', 'success') }
    failure { setGithubStatus(params.APPRAISAL_NAME, 'Failure during unit tests!', 'failure') }
  }
}
